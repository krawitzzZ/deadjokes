version: '3'

volumes:
  elasticsearch-data:
    driver: local
  logstash_data:
    driver: local
  kibana-data:
    driver: local

networks:
  elastic_network:
    name: elastic-network
    driver: bridge
    external: false

services:
  elasticsearch:
    image: docker.io/bitnami/elasticsearch:7
    container_name: deadjokes_elasticsearch
    networks:
      - elastic_network
    ports:
      - '9200:9200'
    volumes:
      - 'elasticsearch-data:/bitnami/elasticsearch'

  logstash:
    image: docker.io/bitnami/logstash:7
    container_name: deadjokes_logstash
    env_file:
      - .env
    depends_on:
      - elasticsearch
    environment:
      - LOGSTASH_EXPOSE_API=yes
      - LOGSTASH_PIPELINE_CONF_FILENAME=logstash.conf
    networks:
      - elastic_network
    ports:
      - '8080:8080'
      - '54321:54321'
    volumes:
      - 'logstash_data:/bitnami'
      - '${PWD}/.data/infra/logstash:/bitnami/logstash/pipeline'

  kibana:
    image: docker.io/bitnami/kibana:7
    container_name: deadjokes_kibana
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'
    networks:
      - elastic_network
    volumes:
      - 'kibana-data:/bitnami/kibana'

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.50
    container_name: deadjokes_jaeger_collector
    env_file:
      - .env
    depends_on:
      - elasticsearch
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    networks:
      - elastic_network
    ports:
      - '9411:9411'
      - '14250:14250'
      - '14267:14267'
      - '14268:14268'
      - '14269:14269'
    restart: on-failure

  jaeger-query:
    image: jaegertracing/jaeger-query:1.50
    container_name: deadjokes_jaeger_query
    env_file:
      - .env
    depends_on:
      - jaeger-collector
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
    networks:
      - elastic_network
    ports:
      - '16686:16686'
      - '16687:16687'
    restart: on-failure
